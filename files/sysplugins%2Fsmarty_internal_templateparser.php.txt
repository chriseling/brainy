<?php
/**
 * Brainy Internal Plugin Templateparser
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 * @package Brainy
 * @subpackage Compiler
 * @author Uwe Tews
 * @author Matt Basta
 */
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/
class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    public function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    public function __toString()
    {
        return $this->_string;
    }

    public function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    public function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    public function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);

                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    public function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 14 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 80 "smarty_internal_templateparser.php"
{
#line 16 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    public static $prefix_number = 0;
    private $lex;
    private $internalError = false;
    private $strip = false;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->block_nesting_level = 0;
        $this->security = isset($this->smarty->security_policy);
        $this->is_xml = false;
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public function compileVariable($variable) {
        return 'smarty_array_lookup($_smarty_tpl->tpl_vars, '. $variable .')->value';
    }
#line 117 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_RDEL                           =  3;
    const TP_COMMENT                        =  4;
    const TP_TEXT                           =  5;
    const TP_STRIPON                        =  6;
    const TP_STRIPOFF                       =  7;
    const TP_BLOCKSOURCE                    =  8;
    const TP_LITERALSTART                   =  9;
    const TP_LITERALEND                     = 10;
    const TP_LITERAL                        = 11;
    const TP_LDEL                           = 12;
    const TP_DOLLAR                         = 13;
    const TP_ID                             = 14;
    const TP_EQUAL                          = 15;
    const TP_PTR                            = 16;
    const TP_LDELIF                         = 17;
    const TP_LDELFOR                        = 18;
    const TP_SEMICOLON                      = 19;
    const TP_INCDEC                         = 20;
    const TP_TO                             = 21;
    const TP_STEP                           = 22;
    const TP_LDELFOREACH                    = 23;
    const TP_SPACE                          = 24;
    const TP_AS                             = 25;
    const TP_APTR                           = 26;
    const TP_LDELSETFILTER                  = 27;
    const TP_SMARTYBLOCKCHILDPARENT         = 28;
    const TP_LDELSLASH                      = 29;
    const TP_ATTR                           = 30;
    const TP_INTEGER                        = 31;
    const TP_COMMA                          = 32;
    const TP_OPENP                          = 33;
    const TP_CLOSEP                         = 34;
    const TP_MATH                           = 35;
    const TP_UNIMATH                        = 36;
    const TP_ANDSYM                         = 37;
    const TP_ISIN                           = 38;
    const TP_ISDIVBY                        = 39;
    const TP_ISNOTDIVBY                     = 40;
    const TP_ISEVEN                         = 41;
    const TP_ISNOTEVEN                      = 42;
    const TP_ISEVENBY                       = 43;
    const TP_ISNOTEVENBY                    = 44;
    const TP_ISODD                          = 45;
    const TP_ISNOTODD                       = 46;
    const TP_ISODDBY                        = 47;
    const TP_ISNOTODDBY                     = 48;
    const TP_INSTANCEOF                     = 49;
    const TP_QMARK                          = 50;
    const TP_NOT                            = 51;
    const TP_TYPECAST                       = 52;
    const TP_HEX                            = 53;
    const TP_DOT                            = 54;
    const TP_SINGLEQUOTESTRING              = 55;
    const TP_DOUBLECOLON                    = 56;
    const TP_AT                             = 57;
    const TP_HATCH                          = 58;
    const TP_OPENB                          = 59;
    const TP_CLOSEB                         = 60;
    const TP_EQUALS                         = 61;
    const TP_NOTEQUALS                      = 62;
    const TP_GREATERTHAN                    = 63;
    const TP_LESSTHAN                       = 64;
    const TP_GREATEREQUAL                   = 65;
    const TP_LESSEQUAL                      = 66;
    const TP_IDENTITY                       = 67;
    const TP_NONEIDENTITY                   = 68;
    const TP_MOD                            = 69;
    const TP_LAND                           = 70;
    const TP_LOR                            = 71;
    const TP_LXOR                           = 72;
    const TP_QUOTE                          = 73;
    const TP_DOLLARID                       = 74;
    const YY_NO_ACTION = 541;
    const YY_ACCEPT_ACTION = 540;
    const YY_ERROR_ACTION = 539;

    const YY_SZ_ACTTAB = 2560;
static public $yy_action = array(
 /*     0 */   216,   24,  294,  296,   29,  283,  270,  285,  288,  280,
 /*    10 */   195,   41,   24,   10,  296,   18,  468,   30,    2,  105,
 /*    20 */   281,  468,  289,   41,  123,  216,  252,  407,  245,   30,
 /*    30 */   242,   35,  139,  263,   49,   48,   50,   44,   16,   15,
 /*    40 */   291,  293,   11,   12,  295,  304,   23,   21,  407,  246,
 /*    50 */   275,  216,  272,  407,  407,  540,   93,  261,  243,  282,
 /*    60 */   314,  313,  315,  316,  317,  312,  311,  307,  323,  310,
 /*    70 */   309,  308,  216,   45,  407,  216,  324,  404,  335,   24,
 /*    80 */   407,  296,   29,  148,   24,    8,  296,   42,  129,  187,
 /*    90 */     2,  105,  254,   34,  174,   41,  123,  216,  404,   45,
 /*   100 */   245,   30,  242,  292,  404,   25,   49,   48,   50,   44,
 /*   110 */    16,   15,  291,  293,   11,   12,  295,  304,   23,   21,
 /*   120 */   204,  216,   22,   45,  238,  216,  216,  364,  369,  236,
 /*   130 */   231,  247,  314,  313,  315,  316,  317,  312,  311,  307,
 /*   140 */   323,  310,  309,  308,   41,   45,  338,  336,   41,  216,
 /*   150 */    30,  401,   32,  157,   30,   49,   48,   50,   44,   16,
 /*   160 */    15,  291,  293,   11,   12,  295,  304,   23,   21,  216,
 /*   170 */    98,  169,   41,   45,   45,  259,  243,  282,   30,  254,
 /*   180 */   292,  314,  313,  315,  316,  317,  312,  311,  307,  323,
 /*   190 */   310,  309,  308,  124,  195,  278,  269,  202,   24,    5,
 /*   200 */   296,  342,  244,   49,   48,   50,   44,   16,   15,  291,
 /*   210 */   293,   11,   12,  295,  304,   23,   21,  216,  101,  175,
 /*   220 */   228,  284,  142,  197,  303,   40,  326,  346,  292,  314,
 /*   230 */   313,  315,  316,  317,  312,  311,  307,  323,  310,  309,
 /*   240 */   308,  223,  192,  238,  237,  202,  190,  196,   27,  157,
 /*   250 */   157,   49,   48,   50,   44,   16,   15,  291,  293,   11,
 /*   260 */    12,  295,  304,   23,   21,  216,  102,  176,   17,  202,
 /*   270 */   298,  127,  229,  202,  202,    5,  292,  314,  313,  315,
 /*   280 */   316,  317,  312,  311,  307,  323,  310,  309,  308,  124,
 /*   290 */   124,  216,  209,  202,  250,  240,  214,    9,  142,   49,
 /*   300 */    48,   50,   44,   16,   15,  291,  293,   11,   12,  295,
 /*   310 */   304,   23,   21,  216,   41,  203,  103,  189,  303,  262,
 /*   320 */    30,   38,  117,  334,  325,  314,  313,  315,  316,  317,
 /*   330 */   312,  311,  307,  323,  310,  309,  308,  258,    6,  200,
 /*   340 */   303,    5,    3,   40,   24,  257,  249,   49,   48,   50,
 /*   350 */    44,   16,   15,  291,  293,   11,   12,  295,  304,   23,
 /*   360 */    21,  216,  180,  267,  142,   40,  345,  333,  250,  239,
 /*   370 */   300,  292,  121,  314,  313,  315,  316,  317,  312,  311,
 /*   380 */   307,  323,  310,  309,  308,  177,  305,  329,  204,   24,
 /*   390 */   181,  296,  305,  136,  292,   49,   48,   50,   44,   16,
 /*   400 */    15,  291,  293,   11,   12,  295,  304,   23,   21,  216,
 /*   410 */   158,  204,  194,  137,  276,  216,   43,  250,  274,  292,
 /*   420 */   199,  314,  313,  315,  316,  317,  312,  311,  307,  323,
 /*   430 */   310,  309,  308,  135,  154,   24,  204,  217,  264,  202,
 /*   440 */   271,  178,  327,   49,   48,   50,   44,   16,   15,  291,
 /*   450 */   293,   11,   12,  295,  304,   23,   21,  216,   13,  185,
 /*   460 */    24,  305,  256,   24,  216,  232,  112,  125,  157,  314,
 /*   470 */   313,  315,  316,  317,  312,  311,  307,  323,  310,  309,
 /*   480 */   308,  258,  258,   26,  188,   14,  157,  226,  277,   30,
 /*   490 */    31,   49,   48,   50,   44,   16,   15,  291,  293,   11,
 /*   500 */    12,  295,  304,   23,   21,  216,  209,  328,   43,   92,
 /*   510 */   302,    9,   45,  179,  201,  111,  100,  314,  313,  315,
 /*   520 */   316,  317,  312,  311,  307,  323,  310,  309,  308,  252,
 /*   530 */   258,  258,  106,   32,  298,  329,  268,  273,  140,   49,
 /*   540 */    48,   50,   44,   16,   15,  291,  293,   11,   12,  295,
 /*   550 */   304,   23,   21,  216,  161,  206,  331,  265,   20,  126,
 /*   560 */   173,  225,  130,  292,  148,  314,  313,  315,  316,  317,
 /*   570 */   312,  311,  307,  323,  310,  309,  308,  183,  166,  193,
 /*   580 */   319,   19,  122,   33,  287,  260,  292,   49,   48,   50,
 /*   590 */    44,   16,   15,  291,  293,   11,   12,  295,  304,   23,
 /*   600 */    21,  170,  341,    3,  132,  253,    4,  134,  216,  205,
 /*   610 */   292,  332,  284,  314,  313,  315,  316,  317,  312,  311,
 /*   620 */   307,  323,  310,  309,  308,  216,  405,  191,  233,  279,
 /*   630 */   184,  165,  133,  320,  305,   57,  119,  141,  230,  292,
 /*   640 */    36,   28,  337,  198,  286,  306,  253,  405,  224,  321,
 /*   650 */   290,  305,  301,  405,  202,  172,    5,  104,  311,   49,
 /*   660 */    48,   50,   44,   16,   15,  291,  293,   11,   12,  295,
 /*   670 */   304,   23,   21,  216,  204,  186,  311,  115,  311,  142,
 /*   680 */   311,  311,  107,  339,  216,  314,  313,  315,  316,  317,
 /*   690 */   312,  311,  307,  323,  310,  309,  308,  311,  311,  235,
 /*   700 */   311,  311,  311,  311,  311,  311,  118,   49,   48,   50,
 /*   710 */    44,   16,   15,  291,  293,   11,   12,  295,  304,   23,
 /*   720 */    21,  258,  311,  311,  311,  311,  311,  311,  311,  311,
 /*   730 */   311,  311,  311,  314,  313,  315,  316,  317,  312,  311,
 /*   740 */   307,  323,  310,  309,  308,   49,   48,   50,   44,   16,
 /*   750 */    15,  291,  293,   11,   12,  295,  304,   23,   21,  311,
 /*   760 */   311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
 /*   770 */   311,  314,  313,  315,  316,  317,  312,  311,  307,  323,
 /*   780 */   310,  309,  308,  311,   10,  128,   90,  311,  311,    2,
 /*   790 */   105,   95,  311,  311,  233,  123,  311,  311,  152,  245,
 /*   800 */   299,  242,  131,  255,  311,   39,  258,  156,   51,  311,
 /*   810 */   311,  340,  311,   97,  224,  321,  290,  216,  301,  374,
 /*   820 */   311,  311,  258,   47,   46,  297,  248,  322,  258,  311,
 /*   830 */   103,    1,  251,   96,  311,  167,   10,  138,  210,  311,
 /*   840 */    41,    2,  105,  311,  292,   94,   30,  123,  258,    5,
 /*   850 */    24,  245,  296,  242,  311,  255,  305,   39,  311,  311,
 /*   860 */    51,  311,   41,  311,  241,  164,  311,  311,   30,  149,
 /*   870 */   311,  160,  142,  311,  292,   47,   46,  297,  248,  322,
 /*   880 */   292,  227,  103,    1,  330,  301,  305,  311,   10,  138,
 /*   890 */   221,  311,  305,    2,  105,  311,  233,   94,  311,  123,
 /*   900 */   155,  311,  311,  245,  131,  242,  311,  255,  311,   39,
 /*   910 */   311,  311,   51,  266,  311,  311,  224,  321,  290,  311,
 /*   920 */   301,  311,  311,   99,  159,  311,  311,   47,   46,  297,
 /*   930 */   248,  322,  311,  292,  103,    1,   36,   28,  311,  311,
 /*   940 */    10,  127,  221,  311,  311,    2,  105,  311,  311,   94,
 /*   950 */   202,  123,  233,  311,  311,  245,  144,  242,  311,  255,
 /*   960 */   131,   37,  311,  311,   51,  311,  311,  311,  311,  311,
 /*   970 */   311,  311,  224,  321,  290,  311,  301,  311,  311,   47,
 /*   980 */    46,  297,  248,  322,  311,  311,  103,    1,  311,  311,
 /*   990 */   311,  311,   10,  138,  208,  311,  311,    2,  105,  311,
 /*  1000 */   233,   94,  311,  123,  153,  311,  311,  245,  131,  242,
 /*  1010 */   311,  215,  311,   39,  311,  311,   51,  311,  311,  311,
 /*  1020 */   224,  321,  290,  311,  301,  311,  311,  191,  162,  311,
 /*  1030 */   311,   47,   46,  297,  248,  322,  311,  292,  103,    1,
 /*  1040 */    36,   28,  311,  311,   10,  120,  221,  311,  311,    2,
 /*  1050 */   105,  311,  311,   94,  202,  123,  311,  311,  311,  245,
 /*  1060 */   311,  242,  311,  255,  311,    7,  191,  163,   51,  311,
 /*  1070 */   311,  311,  311,  311,  311,  311,  292,  311,  311,   36,
 /*  1080 */    28,  311,  311,   47,   46,  297,  248,  322,  311,  311,
 /*  1090 */   103,    1,  311,  202,  311,  311,   10,  138,  211,  311,
 /*  1100 */   311,    2,  105,  311,  233,   94,  311,  123,  147,  311,
 /*  1110 */   311,  245,  131,  242,  311,  255,  311,   39,  311,  311,
 /*  1120 */    51,  311,  311,  311,  224,  321,  290,  311,  301,  311,
 /*  1130 */   311,  191,  168,  311,  311,   47,   46,  297,  248,  322,
 /*  1140 */   311,  292,  103,    1,   36,   28,  311,  311,   10,  143,
 /*  1150 */   221,  311,  311,    2,  105,  311,  311,   94,  202,  123,
 /*  1160 */   311,  311,  311,  245,  311,  242,  311,  255,  311,   39,
 /*  1170 */   191,  171,   51,  311,  311,  311,  311,  311,  311,  311,
 /*  1180 */   292,  311,  311,   36,   28,  311,  311,   47,   46,  297,
 /*  1190 */   248,  322,  311,  311,  103,    1,  311,  202,  311,  311,
 /*  1200 */    10,  138,  207,  311,  311,    2,  105,  311,  233,   94,
 /*  1210 */   311,  123,  151,  311,  311,  245,  131,  242,  311,  255,
 /*  1220 */   311,   39,  311,  311,   51,  311,  311,  311,  224,  321,
 /*  1230 */   290,  311,  301,  311,  311,  191,  182,  311,  311,   47,
 /*  1240 */    46,  297,  248,  322,  311,  292,  103,    1,   36,   28,
 /*  1250 */   311,  311,   10,  127,  221,  311,  311,    2,  105,  311,
 /*  1260 */   311,   94,  202,  123,  311,  311,   24,  245,  296,  242,
 /*  1270 */    24,  255,  296,   37,  311,  311,   51,  311,   41,  311,
 /*  1280 */   234,  311,   41,  311,   30,  311,  311,  311,   30,  311,
 /*  1290 */   311,   47,   46,  297,  248,  322,  311,  311,  103,  311,
 /*  1300 */   311,  311,  311,  311,   10,  127,  219,  311,  311,    2,
 /*  1310 */   105,  311,  233,   94,  311,  123,  145,  311,  311,  245,
 /*  1320 */   131,  242,  311,  255,  311,   37,  311,  311,   51,  311,
 /*  1330 */   311,  311,  224,  321,  290,  311,  301,  311,  311,  311,
 /*  1340 */   311,  311,  311,   47,   46,  297,  248,  322,  450,  311,
 /*  1350 */   103,  311,  311,  311,  311,  311,  311,  311,  311,  311,
 /*  1360 */   311,  311,  311,  311,  450,   94,  450,  450,  311,  450,
 /*  1370 */   450,  311,  311,  311,  311,  450,  311,  450,    5,  450,
 /*  1380 */   311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
 /*  1390 */   311,  311,  311,  311,  450,  233,  311,  311,  311,  113,
 /*  1400 */   233,  142,   78,  131,  150,  450,  311,  311,  131,  311,
 /*  1410 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  1420 */   224,  321,  290,  311,  301,  311,  311,  233,  311,  213,
 /*  1430 */   343,  133,  311,  311,   83,  131,  311,  311,  311,  311,
 /*  1440 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  1450 */   113,  301,  311,   78,  131,  311,  311,  311,  218,  311,
 /*  1460 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  1470 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  1480 */   311,  344,   65,  119,  239,  311,  311,  311,  311,  311,
 /*  1490 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  1500 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  1510 */   311,  133,  311,  311,   83,  131,  311,  311,  311,  311,
 /*  1520 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  1530 */   133,  301,  311,   83,  131,  311,  311,  311,  220,  311,
 /*  1540 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  1550 */   301,  311,  311,  311,  311,  233,  311,  222,  311,  133,
 /*  1560 */   311,  233,   68,  131,  311,  146,  311,  311,  311,  131,
 /*  1570 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  1580 */   311,  224,  321,  290,  311,  301,  311,  233,  311,  311,
 /*  1590 */   311,  133,  311,  311,   86,  131,  311,  311,  311,  311,
 /*  1600 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  1610 */   133,  301,  311,   75,  131,  311,  311,  311,  311,  311,
 /*  1620 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  1630 */   301,  311,  311,  311,  311,  233,  311,  311,  311,   91,
 /*  1640 */   311,  311,   52,  116,  311,  311,  311,  311,  311,  311,
 /*  1650 */   311,  286,  306,  311,  311,  212,  321,  290,  311,  301,
 /*  1660 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  1670 */   311,  110,  311,  311,   71,  131,  311,  311,  311,  311,
 /*  1680 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  1690 */    91,  301,  311,   55,  116,  311,  311,  311,  311,  311,
 /*  1700 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  1710 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  1720 */   311,  311,   74,  131,  311,  311,  311,  311,  311,  311,
 /*  1730 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  1740 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  1750 */   311,  133,  311,  311,   79,  131,  311,  311,  311,  311,
 /*  1760 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  1770 */   133,  301,  311,   67,  131,  311,  311,  311,  311,  311,
 /*  1780 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  1790 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  1800 */   311,  311,   65,  131,  311,  311,  311,  311,  311,  311,
 /*  1810 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  1820 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  1830 */   311,  114,  311,  311,   58,  131,  311,  311,  311,  311,
 /*  1840 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  1850 */   133,  301,  311,   63,  131,  311,  311,  311,  311,  311,
 /*  1860 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  1870 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  1880 */   311,  311,   85,  131,  311,  311,  311,  311,  311,  311,
 /*  1890 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  1900 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  1910 */   311,  133,  311,  311,   70,  131,  311,  311,  311,  311,
 /*  1920 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  1930 */   109,  301,  311,   72,  131,  311,  311,  311,  311,  311,
 /*  1940 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  1950 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  1960 */   311,  311,   59,  131,  311,  311,  311,  311,  311,  311,
 /*  1970 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  1980 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  1990 */   311,  133,  311,  311,   89,  131,  311,  311,  311,  311,
 /*  2000 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  2010 */   133,  301,  311,   73,  131,  311,  311,  311,  311,  311,
 /*  2020 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  2030 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  2040 */   311,  311,   82,  131,  311,  311,  311,  311,  311,  311,
 /*  2050 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  2060 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  2070 */   311,  133,  311,  311,   53,  131,  311,  311,  311,  311,
 /*  2080 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  2090 */   133,  301,  311,   61,  131,  311,  311,  311,  311,  311,
 /*  2100 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  2110 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  2120 */   311,  311,   87,  131,  311,  311,  311,  311,  311,  311,
 /*  2130 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  2140 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  2150 */   311,  133,  311,  311,   76,  131,  311,  311,  311,  311,
 /*  2160 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  2170 */   133,  301,  311,   77,  131,  311,  311,  311,  311,  311,
 /*  2180 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  2190 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  2200 */   311,  311,   64,  131,  311,  311,  311,  311,  311,  311,
 /*  2210 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  2220 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  2230 */   311,  108,  311,  311,   66,  131,  311,  311,  311,  311,
 /*  2240 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  2250 */   133,  301,  311,   88,  131,  311,  311,  311,  311,  311,
 /*  2260 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  2270 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  2280 */   311,  311,   60,  131,  311,  311,  311,  311,  311,  311,
 /*  2290 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  2300 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  2310 */   311,  133,  311,  311,   56,  131,  311,  311,  311,  311,
 /*  2320 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  2330 */   133,  301,  311,   80,  131,  311,  311,  311,  311,  311,
 /*  2340 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  2350 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  2360 */   311,  311,   81,  131,  311,  311,  311,  311,  311,  311,
 /*  2370 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  2380 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  2390 */   311,  133,  311,  311,   62,  131,  311,  311,  311,  311,
 /*  2400 */   311,  311,  311,  286,  306,  311,  233,  224,  321,  290,
 /*  2410 */   133,  301,  311,   84,  131,  311,  311,  311,  311,  311,
 /*  2420 */   311,  311,  286,  306,  311,  311,  224,  321,  290,  311,
 /*  2430 */   301,  311,  311,  311,  311,  233,  311,  311,  311,  133,
 /*  2440 */   311,  311,   54,  131,  311,  311,  311,  311,  311,  311,
 /*  2450 */   311,  286,  306,  311,  311,  224,  321,  290,  311,  301,
 /*  2460 */   311,  311,  311,  311,  311,  311,  311,  233,  311,  311,
 /*  2470 */   311,  133,  311,  311,   69,  131,  311,  311,  311,  311,
 /*  2480 */   311,  311,  311,  286,  306,  311,  311,  224,  321,  290,
 /*  2490 */   335,  301,  311,  311,  311,  311,  311,    8,  311,  311,
 /*  2500 */   311,  311,    2,  105,  311,  311,  311,  311,  123,  311,
 /*  2510 */   311,  311,  245,  311,  242,  311,  311,  311,  311,  311,
 /*  2520 */   311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
 /*  2530 */   311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
 /*  2540 */   311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
 /*  2550 */   311,  311,  311,  311,  311,  311,  311,  311,  318,  336,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,   12,    3,   14,   15,    4,    5,    6,    7,    8,
 /*    10 */     9,   24,   12,   12,   14,   15,   54,   30,   17,   18,
 /*    20 */    20,   59,   14,   24,   23,    1,   54,    3,   27,   30,
 /*    30 */    29,   12,   13,   14,   35,   36,   37,   38,   39,   40,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   24,   25,
 /*    50 */    31,    1,   14,    3,   30,   76,   77,   78,   79,   80,
 /*    60 */    61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
 /*    70 */    71,   72,    1,   49,   24,    1,  102,    3,    5,   12,
 /*    80 */    30,   14,   15,  109,   12,   12,   14,   12,   13,   14,
 /*    90 */    17,   18,    2,   22,   85,   24,   23,    1,   24,   49,
 /*   100 */    27,   30,   29,   94,   30,   15,   35,   36,   37,   38,
 /*   110 */    39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   120 */   111,    1,   26,   49,   57,    1,    1,    3,    3,   57,
 /*   130 */    13,   14,   61,   62,   63,   64,   65,   66,   67,   68,
 /*   140 */    69,   70,   71,   72,   24,   49,   73,   74,   24,    1,
 /*   150 */    30,    3,   15,   16,   30,   35,   36,   37,   38,   39,
 /*   160 */    40,   41,   42,   43,   44,   45,   46,   47,   48,    1,
 /*   170 */    84,   85,   24,   49,   49,   78,   79,   80,   30,    2,
 /*   180 */    94,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   190 */    70,   71,   72,   56,    9,   10,   11,  111,   12,   33,
 /*   200 */    14,   14,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   210 */    42,   43,   44,   45,   46,   47,   48,    1,   84,   85,
 /*   220 */    54,  105,   56,  107,  108,   32,   60,   34,   94,   61,
 /*   230 */    62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*   240 */    72,   25,   84,   57,   57,  111,   84,   84,   15,   16,
 /*   250 */    16,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   260 */    44,   45,   46,   47,   48,    1,   84,   85,   26,  111,
 /*   270 */   112,   13,   14,  111,  111,   33,   94,   61,   62,   63,
 /*   280 */    64,   65,   66,   67,   68,   69,   70,   71,   72,   56,
 /*   290 */    56,    1,   54,  111,   87,   88,   89,   59,   56,   35,
 /*   300 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   310 */    46,   47,   48,    1,   24,    3,   58,  107,  108,   31,
 /*   320 */    30,   12,   91,    3,   60,   61,   62,   63,   64,   65,
 /*   330 */    66,   67,   68,   69,   70,   71,   72,  106,   32,  107,
 /*   340 */   108,   33,   33,   32,   12,   34,   14,   35,   36,   37,
 /*   350 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   360 */    48,    1,   85,    3,   56,   32,   60,   34,   87,   88,
 /*   370 */     3,   94,   92,   61,   62,   63,   64,   65,   66,   67,
 /*   380 */    68,   69,   70,   71,   72,   85,  106,   20,  111,   12,
 /*   390 */   104,   14,  106,   13,   94,   35,   36,   37,   38,   39,
 /*   400 */    40,   41,   42,   43,   44,   45,   46,   47,   48,    1,
 /*   410 */    85,  111,   84,   33,   14,    1,    2,   87,   88,   94,
 /*   420 */    19,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   430 */    70,   71,   72,   32,   14,   12,  111,   14,   80,  111,
 /*   440 */    82,  104,   34,   35,   36,   37,   38,   39,   40,   41,
 /*   450 */    42,   43,   44,   45,   46,   47,   48,    1,    2,  104,
 /*   460 */    12,  106,   14,   12,    1,   14,   91,   91,   16,   61,
 /*   470 */    62,   63,   64,   65,   66,   67,   68,   69,   70,   71,
 /*   480 */    72,  106,  106,   24,   93,   90,   16,   90,   24,   30,
 /*   490 */    15,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*   500 */    44,   45,   46,   47,   48,    1,   54,    3,    2,   14,
 /*   510 */   108,   59,   49,  104,   93,   91,   91,   61,   62,   63,
 /*   520 */    64,   65,   66,   67,   68,   69,   70,   71,   72,   54,
 /*   530 */   106,  106,   93,   15,  112,   20,    3,   14,   13,   35,
 /*   540 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   550 */    46,   47,   48,    1,   85,    3,   60,  102,   50,   13,
 /*   560 */    58,   14,   14,   94,  109,   61,   62,   63,   64,   65,
 /*   570 */    66,   67,   68,   69,   70,   71,   72,   85,   58,   14,
 /*   580 */     3,    2,   13,   21,   34,   31,   94,   35,   36,   37,
 /*   590 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   600 */    48,   85,   14,   33,   13,   79,   33,   13,    1,   14,
 /*   610 */    94,   94,  105,   61,   62,   63,   64,   65,   66,   67,
 /*   620 */    68,   69,   70,   71,   72,    1,    3,   84,   79,   10,
 /*   630 */    85,  104,   83,  109,  106,   86,   87,   88,   15,   94,
 /*   640 */    97,   98,  116,   19,   95,   96,   79,   24,   99,  100,
 /*   650 */   101,  106,  103,   30,  111,  104,   33,  104,  117,   35,
 /*   660 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*   670 */    46,   47,   48,    1,  111,  104,  117,   81,  117,   56,
 /*   680 */   117,  117,  115,  116,    1,   61,   62,   63,   64,   65,
 /*   690 */    66,   67,   68,   69,   70,   71,   72,  117,  117,   16,
 /*   700 */   117,  117,  117,  117,  117,  117,   91,   35,   36,   37,
 /*   710 */    38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
 /*   720 */    48,  106,  117,  117,  117,  117,  117,  117,  117,  117,
 /*   730 */   117,  117,  117,   61,   62,   63,   64,   65,   66,   67,
 /*   740 */    68,   69,   70,   71,   72,   35,   36,   37,   38,   39,
 /*   750 */    40,   41,   42,   43,   44,   45,   46,   47,   48,  117,
 /*   760 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*   770 */   117,   61,   62,   63,   64,   65,   66,   67,   68,   69,
 /*   780 */    70,   71,   72,  117,   12,   13,   14,  117,  117,   17,
 /*   790 */    18,   91,  117,  117,   79,   23,  117,  117,   83,   27,
 /*   800 */    28,   29,   87,   31,  117,   33,  106,   91,   36,  117,
 /*   810 */   117,   96,  117,   91,   99,  100,  101,    1,  103,    3,
 /*   820 */   117,  117,  106,   51,   52,   53,   54,   55,  106,  117,
 /*   830 */    58,   59,   16,   91,  117,   85,   12,   13,   14,  117,
 /*   840 */    24,   17,   18,  117,   94,   73,   30,   23,  106,   33,
 /*   850 */    12,   27,   14,   29,  117,   31,  106,   33,  117,  117,
 /*   860 */    36,  117,   24,  117,   26,   85,  117,  117,   30,   87,
 /*   870 */   117,   85,   56,  117,   94,   51,   52,   53,   54,   55,
 /*   880 */    94,   99,   58,   59,   60,  103,  106,  117,   12,   13,
 /*   890 */    14,  117,  106,   17,   18,  117,   79,   73,  117,   23,
 /*   900 */    83,  117,  117,   27,   87,   29,  117,   31,  117,   33,
 /*   910 */   117,  117,   36,   96,  117,  117,   99,  100,  101,  117,
 /*   920 */   103,  117,  117,   84,   85,  117,  117,   51,   52,   53,
 /*   930 */    54,   55,  117,   94,   58,   59,   97,   98,  117,  117,
 /*   940 */    12,   13,   14,  117,  117,   17,   18,  117,  117,   73,
 /*   950 */   111,   23,   79,  117,  117,   27,   83,   29,  117,   31,
 /*   960 */    87,   33,  117,  117,   36,  117,  117,  117,  117,  117,
 /*   970 */   117,  117,   99,  100,  101,  117,  103,  117,  117,   51,
 /*   980 */    52,   53,   54,   55,  117,  117,   58,   59,  117,  117,
 /*   990 */   117,  117,   12,   13,   14,  117,  117,   17,   18,  117,
 /*  1000 */    79,   73,  117,   23,   83,  117,  117,   27,   87,   29,
 /*  1010 */   117,   31,  117,   33,  117,  117,   36,  117,  117,  117,
 /*  1020 */    99,  100,  101,  117,  103,  117,  117,   84,   85,  117,
 /*  1030 */   117,   51,   52,   53,   54,   55,  117,   94,   58,   59,
 /*  1040 */    97,   98,  117,  117,   12,   13,   14,  117,  117,   17,
 /*  1050 */    18,  117,  117,   73,  111,   23,  117,  117,  117,   27,
 /*  1060 */   117,   29,  117,   31,  117,   33,   84,   85,   36,  117,
 /*  1070 */   117,  117,  117,  117,  117,  117,   94,  117,  117,   97,
 /*  1080 */    98,  117,  117,   51,   52,   53,   54,   55,  117,  117,
 /*  1090 */    58,   59,  117,  111,  117,  117,   12,   13,   14,  117,
 /*  1100 */   117,   17,   18,  117,   79,   73,  117,   23,   83,  117,
 /*  1110 */   117,   27,   87,   29,  117,   31,  117,   33,  117,  117,
 /*  1120 */    36,  117,  117,  117,   99,  100,  101,  117,  103,  117,
 /*  1130 */   117,   84,   85,  117,  117,   51,   52,   53,   54,   55,
 /*  1140 */   117,   94,   58,   59,   97,   98,  117,  117,   12,   13,
 /*  1150 */    14,  117,  117,   17,   18,  117,  117,   73,  111,   23,
 /*  1160 */   117,  117,  117,   27,  117,   29,  117,   31,  117,   33,
 /*  1170 */    84,   85,   36,  117,  117,  117,  117,  117,  117,  117,
 /*  1180 */    94,  117,  117,   97,   98,  117,  117,   51,   52,   53,
 /*  1190 */    54,   55,  117,  117,   58,   59,  117,  111,  117,  117,
 /*  1200 */    12,   13,   14,  117,  117,   17,   18,  117,   79,   73,
 /*  1210 */   117,   23,   83,  117,  117,   27,   87,   29,  117,   31,
 /*  1220 */   117,   33,  117,  117,   36,  117,  117,  117,   99,  100,
 /*  1230 */   101,  117,  103,  117,  117,   84,   85,  117,  117,   51,
 /*  1240 */    52,   53,   54,   55,  117,   94,   58,   59,   97,   98,
 /*  1250 */   117,  117,   12,   13,   14,  117,  117,   17,   18,  117,
 /*  1260 */   117,   73,  111,   23,  117,  117,   12,   27,   14,   29,
 /*  1270 */    12,   31,   14,   33,  117,  117,   36,  117,   24,  117,
 /*  1280 */    26,  117,   24,  117,   30,  117,  117,  117,   30,  117,
 /*  1290 */   117,   51,   52,   53,   54,   55,  117,  117,   58,  117,
 /*  1300 */   117,  117,  117,  117,   12,   13,   14,  117,  117,   17,
 /*  1310 */    18,  117,   79,   73,  117,   23,   83,  117,  117,   27,
 /*  1320 */    87,   29,  117,   31,  117,   33,  117,  117,   36,  117,
 /*  1330 */   117,  117,   99,  100,  101,  117,  103,  117,  117,  117,
 /*  1340 */   117,  117,  117,   51,   52,   53,   54,   55,    3,  117,
 /*  1350 */    58,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*  1360 */   117,  117,  117,  117,   19,   73,   21,   22,  117,   24,
 /*  1370 */    25,  117,  117,  117,  117,   30,  117,   32,   33,   34,
 /*  1380 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*  1390 */   117,  117,  117,  117,   49,   79,  117,  117,  117,   83,
 /*  1400 */    79,   56,   86,   87,   83,   60,  117,  117,   87,  117,
 /*  1410 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  1420 */    99,  100,  101,  117,  103,  117,  117,   79,  117,  113,
 /*  1430 */   114,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  1440 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  1450 */    83,  103,  117,   86,   87,  117,  117,  117,  110,  117,
 /*  1460 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  1470 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  1480 */   117,  114,   86,   87,   88,  117,  117,  117,  117,  117,
 /*  1490 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  1500 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  1510 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  1520 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  1530 */    83,  103,  117,   86,   87,  117,  117,  117,  110,  117,
 /*  1540 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  1550 */   103,  117,  117,  117,  117,   79,  117,  110,  117,   83,
 /*  1560 */   117,   79,   86,   87,  117,   83,  117,  117,  117,   87,
 /*  1570 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  1580 */   117,   99,  100,  101,  117,  103,  117,   79,  117,  117,
 /*  1590 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  1600 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  1610 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  1620 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  1630 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  1640 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  1650 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  1660 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  1670 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  1680 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  1690 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  1700 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  1710 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  1720 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  1730 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  1740 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  1750 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  1760 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  1770 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  1780 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  1790 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  1800 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  1810 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  1820 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  1830 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  1840 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  1850 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  1860 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  1870 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  1880 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  1890 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  1900 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  1910 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  1920 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  1930 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  1940 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  1950 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  1960 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  1970 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  1980 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  1990 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  2000 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  2010 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  2020 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  2030 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  2040 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  2050 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  2060 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  2070 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  2080 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  2090 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  2100 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  2110 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  2120 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  2130 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  2140 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  2150 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  2160 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  2170 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  2180 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  2190 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  2200 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  2210 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  2220 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  2230 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  2240 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  2250 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  2260 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  2270 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  2280 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  2290 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  2300 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  2310 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  2320 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  2330 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  2340 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  2350 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  2360 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  2370 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  2380 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  2390 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  2400 */   117,  117,  117,   95,   96,  117,   79,   99,  100,  101,
 /*  2410 */    83,  103,  117,   86,   87,  117,  117,  117,  117,  117,
 /*  2420 */   117,  117,   95,   96,  117,  117,   99,  100,  101,  117,
 /*  2430 */   103,  117,  117,  117,  117,   79,  117,  117,  117,   83,
 /*  2440 */   117,  117,   86,   87,  117,  117,  117,  117,  117,  117,
 /*  2450 */   117,   95,   96,  117,  117,   99,  100,  101,  117,  103,
 /*  2460 */   117,  117,  117,  117,  117,  117,  117,   79,  117,  117,
 /*  2470 */   117,   83,  117,  117,   86,   87,  117,  117,  117,  117,
 /*  2480 */   117,  117,  117,   95,   96,  117,  117,   99,  100,  101,
 /*  2490 */     5,  103,  117,  117,  117,  117,  117,   12,  117,  117,
 /*  2500 */   117,  117,   17,   18,  117,  117,  117,  117,   23,  117,
 /*  2510 */   117,  117,   27,  117,   29,  117,  117,  117,  117,  117,
 /*  2520 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*  2530 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*  2540 */   117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
 /*  2550 */   117,  117,  117,  117,  117,  117,  117,  117,   73,   74,
);
    const YY_SHIFT_USE_DFLT = -39;
    const YY_SHIFT_MAX = 256;
    static public $yy_shift_ofst = array(
 /*     0 */     1, 1084, 1032,  876,  876,  876, 1084, 1032,  772,  824,
 /*    10 */   772,  876,  876,  876,  876,  876,  876,  876,  876, 1188,
 /*    20 */  1136,  876,  876,  876,  876,  876,  980,  876,  876,  876,
 /*    30 */   876,  876,  876,  876,  876,  876,  876,  876,  876,  876,
 /*    40 */   876,  980,  876,  928,  928, 1292, 1240, 1240, 1240, 1240,
 /*    50 */  1240, 1240,   -1,   71,  120,  120,  120,  120,  120,  456,
 /*    60 */   408,  552,  624,  504,  312,  168,  216,  360,  264,  672,
 /*    70 */   672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
 /*    80 */   672,  672,  672,  672,  672,  672,  672,  672,  710,  710,
 /*    90 */   816,  124,  290,    1, 2485, 1254,  838, 1258,  148,  148,
 /*   100 */  1258,  290,  290,  258,  452,  380,  414,   73,   24,   74,
 /*   110 */    50,   67,    0,   96,  125,  185,  233,  186,  -11,  137,
 /*   120 */   448,  -13,  377,  459,  117,  377,  377,  377,  423,  451,
 /*   130 */   683,  234,  377,  463,  377,  380,  377,  380,  448,  377,
 /*   140 */   377,  -13,  117,  332,  607,  607,  607,  607,  470,  470,
 /*   150 */   607,  607,  607,  607,  607,  -39,   72,   75,  -13,  -13,
 /*   160 */   -13,  -13,  -13,  -13,  -13,  238,  -38,  -13,  -13,  -13,
 /*   170 */   -13,  -13,  238,  -38,  -13,  -13,  -13,  -13,  238,  238,
 /*   180 */   -13,  238,  -13,  -13,  -13,  238,  238,  309,  506,  470,
 /*   190 */   607,  607,  607,  573,  607,  619,  607,  470,  464,  464,
 /*   200 */   470,  506,  -39,  -39,  -39,  -39,  -39, 1345,  623,   19,
 /*   210 */   166,  242,  367,  306,  401,  475,  187,   90,  193,  308,
 /*   220 */   333,  308,  311,  525,  515,  496,  546,  520,  547,  502,
 /*   230 */   523,  565,  573,  577,  594,  420,    8,  588,  400,  550,
 /*   240 */   562,  569,  548,  533,  508,  595,  591,  570,  554,  579,
 /*   250 */   518,  495,  288,  320,   38,  -28,  177,
);
    const YY_REDUCE_USE_DFLT = -27;
    const YY_REDUCE_MAX = 206;
    static public $yy_reduce_ofst = array(
 /*     0 */   -21, 1316,  549, 1447, 1428, 1348, 1367, 1396, 1556, 1476,
 /*    10 */  1607, 1668, 1636, 2167, 2308, 2087, 2276, 2247, 2036, 1908,
 /*    20 */  1876, 1956, 1927, 1508, 1687, 1748, 2148, 2228, 2327, 1527,
 /*    30 */  1847, 2388, 1828, 1988, 2356, 1767, 2068, 2196, 2007, 1716,
 /*    40 */  1796, 1588, 2116,  817,  715, 1129, 1321,  921,  873, 1025,
 /*    50 */  1482, 1233,  839, 1047, 1086,  839, 1151,  982,  943,  543,
 /*    60 */   543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
 /*    70 */   543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
 /*    80 */   543,  543,  543,  543,  543,  543,  543,  543,  543,  543,
 /*    90 */   182,   86,  134,   97,  567,  780,  786,  750,  277,  325,
 /*   100 */   545,    9,  300,  782,  116,  207,  158,  526,  162,  162,
 /*   110 */   162,  355,  280,  162,  162,  358,  210,  355,  355,  210,
 /*   120 */   424,  492,  425,  469,  -26,  286,  375,  231,  231,  376,
 /*   130 */   328,  210,  742,  162,  722,  330,  615,  281,  231,  716,
 /*   140 */   700,  516,  455,  231,  162,  162,  162,  162,  232,  210,
 /*   150 */   162,  162,  162,  162,  163,  162,  528,  524,  517,  517,
 /*   160 */   517,  517,  517,  517,  517,  507,  527,  517,  517,  517,
 /*   170 */   517,  517,  507,  551,  517,  517,  517,  517,  507,  507,
 /*   180 */   517,  507,  517,  517,  517,  507,  507,  571,  422,  402,
 /*   190 */   563,  563,  563,  553,  563,  596,  563,  402,  397,  395,
 /*   200 */   402,  422,  421,  409,  391,  439,  337,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(4, 5, 6, 7, 8, 9, 12, 17, 18, 23, 27, 29, ),
        /* 1 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 2 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 3 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 4 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 5 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 6 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 7 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 8 */ array(12, 13, 14, 17, 18, 23, 27, 28, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 9 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 60, 73, ),
        /* 10 */ array(12, 13, 14, 17, 18, 23, 27, 28, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 11 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 12 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 13 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 14 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 15 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 16 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 17 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 18 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 19 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 20 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 21 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 22 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 23 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 24 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 25 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 26 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 27 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 28 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 29 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 30 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 31 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 32 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 33 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 34 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 35 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 36 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 37 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 38 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 39 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 40 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 41 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 42 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 43 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 44 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 59, 73, ),
        /* 45 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 73, ),
        /* 46 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 73, ),
        /* 47 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 73, ),
        /* 48 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 73, ),
        /* 49 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 73, ),
        /* 50 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 73, ),
        /* 51 */ array(12, 13, 14, 17, 18, 23, 27, 29, 31, 33, 36, 51, 52, 53, 54, 55, 58, 73, ),
        /* 52 */ array(1, 3, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 53 */ array(1, 22, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 54 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 55 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 56 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 57 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 58 */ array(1, 24, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 59 */ array(1, 2, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 60 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 61 */ array(1, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 62 */ array(1, 19, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 63 */ array(1, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 64 */ array(1, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 65 */ array(1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 66 */ array(1, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 67 */ array(1, 3, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 68 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 69 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 70 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 71 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 72 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 73 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 74 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 75 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 76 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 77 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 78 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 79 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 80 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 81 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 82 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 83 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 84 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 85 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 86 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 87 */ array(1, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 88 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 89 */ array(35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, ),
        /* 90 */ array(1, 3, 16, 24, 30, 33, 56, ),
        /* 91 */ array(1, 3, 24, 30, 49, ),
        /* 92 */ array(1, 24, 30, ),
        /* 93 */ array(4, 5, 6, 7, 8, 9, 12, 17, 18, 23, 27, 29, ),
        /* 94 */ array(5, 12, 17, 18, 23, 27, 29, 73, 74, ),
        /* 95 */ array(12, 14, 24, 26, 30, ),
        /* 96 */ array(12, 14, 24, 26, 30, ),
        /* 97 */ array(12, 14, 24, 30, ),
        /* 98 */ array(1, 3, 24, 30, ),
        /* 99 */ array(1, 3, 24, 30, ),
        /* 100 */ array(12, 14, 24, 30, ),
        /* 101 */ array(1, 24, 30, ),
        /* 102 */ array(1, 24, 30, ),
        /* 103 */ array(13, 14, 58, ),
        /* 104 */ array(16, 54, 59, ),
        /* 105 */ array(13, 33, ),
        /* 106 */ array(1, 2, ),
        /* 107 */ array(5, 12, 17, 18, 23, 27, 29, 73, 74, ),
        /* 108 */ array(1, 3, 24, 25, 30, 49, ),
        /* 109 */ array(1, 3, 24, 30, 49, ),
        /* 110 */ array(1, 3, 24, 30, 49, ),
        /* 111 */ array(12, 14, 15, 57, ),
        /* 112 */ array(12, 14, 15, 20, ),
        /* 113 */ array(1, 26, 49, ),
        /* 114 */ array(1, 3, 49, ),
        /* 115 */ array(9, 10, 11, ),
        /* 116 */ array(15, 16, 56, ),
        /* 117 */ array(12, 14, 57, ),
        /* 118 */ array(12, 14, 15, ),
        /* 119 */ array(15, 16, 56, ),
        /* 120 */ array(12, 14, ),
        /* 121 */ array(24, 30, ),
        /* 122 */ array(12, 14, ),
        /* 123 */ array(24, 30, ),
        /* 124 */ array(13, 14, ),
        /* 125 */ array(12, 14, ),
        /* 126 */ array(12, 14, ),
        /* 127 */ array(12, 14, ),
        /* 128 */ array(12, 14, ),
        /* 129 */ array(12, 14, ),
        /* 130 */ array(1, 16, ),
        /* 131 */ array(16, 56, ),
        /* 132 */ array(12, 14, ),
        /* 133 */ array(1, 49, ),
        /* 134 */ array(12, 14, ),
        /* 135 */ array(13, 33, ),
        /* 136 */ array(12, 14, ),
        /* 137 */ array(13, 33, ),
        /* 138 */ array(12, 14, ),
        /* 139 */ array(12, 14, ),
        /* 140 */ array(12, 14, ),
        /* 141 */ array(24, 30, ),
        /* 142 */ array(13, 14, ),
        /* 143 */ array(12, 14, ),
        /* 144 */ array(1, ),
        /* 145 */ array(1, ),
        /* 146 */ array(1, ),
        /* 147 */ array(1, ),
        /* 148 */ array(16, ),
        /* 149 */ array(16, ),
        /* 150 */ array(1, ),
        /* 151 */ array(1, ),
        /* 152 */ array(1, ),
        /* 153 */ array(1, ),
        /* 154 */ array(1, ),
        /* 155 */ array(),
        /* 156 */ array(12, 14, 57, ),
        /* 157 */ array(12, 13, 14, ),
        /* 158 */ array(24, 30, ),
        /* 159 */ array(24, 30, ),
        /* 160 */ array(24, 30, ),
        /* 161 */ array(24, 30, ),
        /* 162 */ array(24, 30, ),
        /* 163 */ array(24, 30, ),
        /* 164 */ array(24, 30, ),
        /* 165 */ array(54, 59, ),
        /* 166 */ array(54, 59, ),
        /* 167 */ array(24, 30, ),
        /* 168 */ array(24, 30, ),
        /* 169 */ array(24, 30, ),
        /* 170 */ array(24, 30, ),
        /* 171 */ array(24, 30, ),
        /* 172 */ array(54, 59, ),
        /* 173 */ array(54, 59, ),
        /* 174 */ array(24, 30, ),
        /* 175 */ array(24, 30, ),
        /* 176 */ array(24, 30, ),
        /* 177 */ array(24, 30, ),
        /* 178 */ array(54, 59, ),
        /* 179 */ array(54, 59, ),
        /* 180 */ array(24, 30, ),
        /* 181 */ array(54, 59, ),
        /* 182 */ array(24, 30, ),
        /* 183 */ array(24, 30, ),
        /* 184 */ array(24, 30, ),
        /* 185 */ array(54, 59, ),
        /* 186 */ array(54, 59, ),
        /* 187 */ array(12, 33, ),
        /* 188 */ array(2, ),
        /* 189 */ array(16, ),
        /* 190 */ array(1, ),
        /* 191 */ array(1, ),
        /* 192 */ array(1, ),
        /* 193 */ array(33, ),
        /* 194 */ array(1, ),
        /* 195 */ array(10, ),
        /* 196 */ array(1, ),
        /* 197 */ array(16, ),
        /* 198 */ array(24, ),
        /* 199 */ array(24, ),
        /* 200 */ array(16, ),
        /* 201 */ array(2, ),
        /* 202 */ array(),
        /* 203 */ array(),
        /* 204 */ array(),
        /* 205 */ array(),
        /* 206 */ array(),
        /* 207 */ array(3, 19, 21, 22, 24, 25, 30, 32, 33, 34, 49, 56, 60, ),
        /* 208 */ array(3, 15, 24, 30, 33, 56, ),
        /* 209 */ array(12, 13, 14, 31, ),
        /* 210 */ array(33, 54, 56, 60, ),
        /* 211 */ array(26, 33, 56, ),
        /* 212 */ array(3, 20, ),
        /* 213 */ array(32, 60, ),
        /* 214 */ array(19, 32, ),
        /* 215 */ array(15, 54, ),
        /* 216 */ array(14, 57, ),
        /* 217 */ array(2, 15, ),
        /* 218 */ array(32, 34, ),
        /* 219 */ array(33, 56, ),
        /* 220 */ array(32, 34, ),
        /* 221 */ array(33, 56, ),
        /* 222 */ array(32, 34, ),
        /* 223 */ array(13, ),
        /* 224 */ array(20, ),
        /* 225 */ array(60, ),
        /* 226 */ array(13, ),
        /* 227 */ array(58, ),
        /* 228 */ array(14, ),
        /* 229 */ array(58, ),
        /* 230 */ array(14, ),
        /* 231 */ array(14, ),
        /* 232 */ array(33, ),
        /* 233 */ array(3, ),
        /* 234 */ array(13, ),
        /* 235 */ array(14, ),
        /* 236 */ array(14, ),
        /* 237 */ array(14, ),
        /* 238 */ array(14, ),
        /* 239 */ array(34, ),
        /* 240 */ array(21, ),
        /* 241 */ array(13, ),
        /* 242 */ array(14, ),
        /* 243 */ array(3, ),
        /* 244 */ array(50, ),
        /* 245 */ array(14, ),
        /* 246 */ array(13, ),
        /* 247 */ array(33, ),
        /* 248 */ array(31, ),
        /* 249 */ array(2, ),
        /* 250 */ array(15, ),
        /* 251 */ array(14, ),
        /* 252 */ array(31, ),
        /* 253 */ array(3, ),
        /* 254 */ array(14, ),
        /* 255 */ array(54, ),
        /* 256 */ array(2, ),
        /* 257 */ array(),
        /* 258 */ array(),
        /* 259 */ array(),
        /* 260 */ array(),
        /* 261 */ array(),
        /* 262 */ array(),
        /* 263 */ array(),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
);
    static public $yy_default = array(
 /*     0 */   350,  524,  539,  495,  495,  495,  539,  539,  539,  539,
 /*    10 */   539,  539,  539,  539,  539,  539,  539,  539,  539,  539,
 /*    20 */   539,  539,  539,  539,  539,  539,  539,  539,  539,  539,
 /*    30 */   539,  539,  539,  539,  539,  539,  539,  539,  539,  539,
 /*    40 */   539,  539,  539,  539,  539,  539,  539,  539,  539,  539,
 /*    50 */   539,  539,  539,  401,  401,  401,  401,  378,  370,  539,
 /*    60 */   539,  539,  539,  539,  539,  539,  406,  539,  539,  408,
 /*    70 */   412,  406,  403,  525,  431,  411,  422,  427,  527,  430,
 /*    80 */   526,  426,  435,  494,  425,  493,  434,  383,  439,  438,
 /*    90 */   450,  414,  401,  347,  539,  401,  401,  401,  458,  421,
 /*   100 */   401,  401,  401,  539,  507,  539,  392,  539,  414,  414,
 /*   110 */   414,  468,  539,  414,  414,  539,  459,  468,  468,  459,
 /*   120 */   539,  401,  539,  401,  539,  468,  539,  539,  539,  539,
 /*   130 */   395,  459,  539,  414,  539,  539,  539,  539,  539,  539,
 /*   140 */   539,  380,  539,  539,  418,  441,  419,  417,  504,  459,
 /*   150 */   443,  437,  424,  442,  397,  502,  469,  539,  367,  368,
 /*   160 */   388,  387,  371,  379,  390,  465,  464,  391,  385,  366,
 /*   170 */   381,  386,  463,  462,  377,  375,  373,  376,  488,  487,
 /*   180 */   365,  486,  372,  382,  389,  466,  485,  468,  496,  482,
 /*   190 */   458,  421,  393,  468,  396,  361,  398,  508,  538,  538,
 /*   200 */   505,  497,  501,  468,  501,  501,  468,  416,  450,  539,
 /*   210 */   450,  450,  440,  539,  539,  446,  539,  480,  539,  436,
 /*   220 */   539,  450,  539,  539,  440,  539,  539,  539,  539,  539,
 /*   230 */   539,  539,  480,  539,  539,  539,  539,  539,  539,  539,
 /*   240 */   409,  539,  539,  539,  452,  539,  539,  506,  539,  480,
 /*   250 */   539,  539,  448,  539,  539,  446,  480,  491,  478,  349,
 /*   260 */   449,  348,  447,  471,  362,  455,  503,  481,  351,  363,
 /*   270 */   354,  360,  416,  402,  410,  472,  460,  537,  359,  358,
 /*   280 */   357,  384,  353,  352,  467,  355,  415,  413,  356,  470,
 /*   290 */   454,  428,  400,  429,  534,  432,  480,  445,  500,  394,
 /*   300 */   533,  461,  484,  483,  433,  479,  420,  516,  520,  519,
 /*   310 */   518,  515,  514,  510,  509,  511,  512,  513,  528,  457,
 /*   320 */   489,  451,  453,  517,  456,  476,  474,  452,  473,  444,
 /*   330 */   477,  475,  399,  492,  535,  536,  532,  530,  529,  531,
 /*   340 */   423,  498,  499,  522,  523,  521,  490,
);
    const YYNOCODE = 118;
    const YYSTACKDEPTH = 500;
    const YYNSTATE = 347;
    const YYNRULE = 192;
    const YYERRORSYMBOL = 75;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    public static $yyFallback = array(
    );
    public function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        $this->yyTraceFILE = $TraceFILE;
        $this->yyTracePrompt = $zTracePrompt;
    }

    public function PrintTrace()
    {
        $this->yyTraceFILE = fopen('php://output', 'w');
        $this->yyTracePrompt = '<br>';
    }

    public $yyTraceFILE;
    public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'RDEL',
  'COMMENT',       'TEXT',          'STRIPON',       'STRIPOFF',
  'BLOCKSOURCE',   'LITERALSTART',  'LITERALEND',    'LITERAL',
  'LDEL',          'DOLLAR',        'ID',            'EQUAL',
  'PTR',           'LDELIF',        'LDELFOR',       'SEMICOLON',
  'INCDEC',        'TO',            'STEP',          'LDELFOREACH',
  'SPACE',         'AS',            'APTR',          'LDELSETFILTER',
  'SMARTYBLOCKCHILDPARENT',  'LDELSLASH',     'ATTR',          'INTEGER',
  'COMMA',         'OPENP',         'CLOSEP',        'MATH',
  'UNIMATH',       'ANDSYM',        'ISIN',          'ISDIVBY',
  'ISNOTDIVBY',    'ISEVEN',        'ISNOTEVEN',     'ISEVENBY',
  'ISNOTEVENBY',   'ISODD',         'ISNOTODD',      'ISODDBY',
  'ISNOTODDBY',    'INSTANCEOF',    'QMARK',         'NOT',
  'TYPECAST',      'HEX',           'DOT',           'SINGLEQUOTESTRING',
  'DOUBLECOLON',   'AT',            'HATCH',         'OPENB',
  'CLOSEB',        'EQUALS',        'NOTEQUALS',     'GREATERTHAN',
  'LESSTHAN',      'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',
  'NONEIDENTITY',  'MOD',           'LAND',          'LOR',
  'LXOR',          'QUOTE',         'DOLLARID',      'error',
  'start',         'template',      'template_element',  'smartytag',
  'literal',       'literal_elements',  'literal_element',  'value',
  'modifierlist',  'attributes',    'expr',          'varindexed',
  'statement',     'statements',    'optspace',      'varvar',
  'foraction',     'modparameters',  'attribute',     'ternary',
  'array',         'ifcond',        'lop',           'variable',
  'function',      'doublequoted_with_quotes',  'static_class_access',  'object',
  'arrayindex',    'indexdef',      'varvarele',     'objectchain',
  'objectelement',  'method',        'params',        'modifier',
  'modparameter',  'arrayelements',  'arrayelement',  'doublequoted',
  'doublequotedcontent',
    );

    public static $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= smartytag RDEL",
 /*   5 */ "template_element ::= COMMENT",
 /*   6 */ "template_element ::= literal",
 /*   7 */ "template_element ::= TEXT",
 /*   8 */ "template_element ::= STRIPON",
 /*   9 */ "template_element ::= STRIPOFF",
 /*  10 */ "template_element ::= BLOCKSOURCE",
 /*  11 */ "literal ::= LITERALSTART LITERALEND",
 /*  12 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  13 */ "literal_elements ::= literal_elements literal_element",
 /*  14 */ "literal_elements ::=",
 /*  15 */ "literal_element ::= literal",
 /*  16 */ "literal_element ::= LITERAL",
 /*  17 */ "smartytag ::= LDEL value",
 /*  18 */ "smartytag ::= LDEL value modifierlist attributes",
 /*  19 */ "smartytag ::= LDEL value attributes",
 /*  20 */ "smartytag ::= LDEL expr modifierlist attributes",
 /*  21 */ "smartytag ::= LDEL expr attributes",
 /*  22 */ "smartytag ::= LDEL DOLLAR ID EQUAL value",
 /*  23 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr",
 /*  24 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes",
 /*  25 */ "smartytag ::= LDEL varindexed EQUAL expr attributes",
 /*  26 */ "smartytag ::= LDEL ID attributes",
 /*  27 */ "smartytag ::= LDEL ID",
 /*  28 */ "smartytag ::= LDEL ID PTR ID attributes",
 /*  29 */ "smartytag ::= LDEL ID modifierlist attributes",
 /*  30 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes",
 /*  31 */ "smartytag ::= LDELIF expr",
 /*  32 */ "smartytag ::= LDELIF expr attributes",
 /*  33 */ "smartytag ::= LDELIF statement",
 /*  34 */ "smartytag ::= LDELIF statement attributes",
 /*  35 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes",
 /*  36 */ "foraction ::= EQUAL expr",
 /*  37 */ "foraction ::= INCDEC",
 /*  38 */ "smartytag ::= LDELFOR statement TO expr attributes",
 /*  39 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes",
 /*  40 */ "smartytag ::= LDELFOREACH attributes",
 /*  41 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes",
 /*  42 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes",
 /*  43 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes",
 /*  44 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes",
 /*  45 */ "smartytag ::= LDELSETFILTER ID modparameters",
 /*  46 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist",
 /*  47 */ "smartytag ::= LDEL SMARTYBLOCKCHILDPARENT",
 /*  48 */ "smartytag ::= LDELSLASH ID",
 /*  49 */ "smartytag ::= LDELSLASH ID modifierlist",
 /*  50 */ "smartytag ::= LDELSLASH ID PTR ID",
 /*  51 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist",
 /*  52 */ "attributes ::= attributes attribute",
 /*  53 */ "attributes ::= attribute",
 /*  54 */ "attributes ::=",
 /*  55 */ "attribute ::= SPACE ID EQUAL ID",
 /*  56 */ "attribute ::= ATTR expr",
 /*  57 */ "attribute ::= ATTR value",
 /*  58 */ "attribute ::= SPACE ID",
 /*  59 */ "attribute ::= SPACE expr",
 /*  60 */ "attribute ::= SPACE value",
 /*  61 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  62 */ "statements ::= statement",
 /*  63 */ "statements ::= statements COMMA statement",
 /*  64 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  65 */ "statement ::= varindexed EQUAL expr",
 /*  66 */ "statement ::= OPENP statement CLOSEP",
 /*  67 */ "expr ::= value",
 /*  68 */ "expr ::= ternary",
 /*  69 */ "expr ::= DOLLAR ID COLON ID",
 /*  70 */ "expr ::= expr MATH value",
 /*  71 */ "expr ::= expr UNIMATH value",
 /*  72 */ "expr ::= expr ANDSYM value",
 /*  73 */ "expr ::= array",
 /*  74 */ "expr ::= expr modifierlist",
 /*  75 */ "expr ::= expr ifcond expr",
 /*  76 */ "expr ::= expr ISIN array",
 /*  77 */ "expr ::= expr ISIN value",
 /*  78 */ "expr ::= expr lop expr",
 /*  79 */ "expr ::= expr ISDIVBY expr",
 /*  80 */ "expr ::= expr ISNOTDIVBY expr",
 /*  81 */ "expr ::= expr ISEVEN",
 /*  82 */ "expr ::= expr ISNOTEVEN",
 /*  83 */ "expr ::= expr ISEVENBY expr",
 /*  84 */ "expr ::= expr ISNOTEVENBY expr",
 /*  85 */ "expr ::= expr ISODD",
 /*  86 */ "expr ::= expr ISNOTODD",
 /*  87 */ "expr ::= expr ISODDBY expr",
 /*  88 */ "expr ::= expr ISNOTODDBY expr",
 /*  89 */ "expr ::= value INSTANCEOF ID",
 /*  90 */ "expr ::= value INSTANCEOF value",
 /*  91 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /*  92 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /*  93 */ "value ::= variable",
 /*  94 */ "value ::= UNIMATH value",
 /*  95 */ "value ::= NOT value",
 /*  96 */ "value ::= TYPECAST value",
 /*  97 */ "value ::= variable INCDEC",
 /*  98 */ "value ::= HEX",
 /*  99 */ "value ::= INTEGER",
 /* 100 */ "value ::= INTEGER DOT INTEGER",
 /* 101 */ "value ::= INTEGER DOT",
 /* 102 */ "value ::= DOT INTEGER",
 /* 103 */ "value ::= ID",
 /* 104 */ "value ::= function",
 /* 105 */ "value ::= OPENP expr CLOSEP",
 /* 106 */ "value ::= SINGLEQUOTESTRING",
 /* 107 */ "value ::= doublequoted_with_quotes",
 /* 108 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 109 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 110 */ "value ::= smartytag RDEL",
 /* 111 */ "value ::= value modifierlist",
 /* 112 */ "variable ::= varindexed",
 /* 113 */ "variable ::= DOLLAR varvar AT ID",
 /* 114 */ "variable ::= object",
 /* 115 */ "variable ::= HATCH ID HATCH",
 /* 116 */ "variable ::= HATCH ID HATCH arrayindex",
 /* 117 */ "variable ::= HATCH variable HATCH",
 /* 118 */ "variable ::= HATCH variable HATCH arrayindex",
 /* 119 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 120 */ "arrayindex ::= arrayindex indexdef",
 /* 121 */ "arrayindex ::=",
 /* 122 */ "indexdef ::= DOT DOLLAR varvar",
 /* 123 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 124 */ "indexdef ::= DOT ID",
 /* 125 */ "indexdef ::= DOT INTEGER",
 /* 126 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 127 */ "indexdef ::= OPENB ID CLOSEB",
 /* 128 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 129 */ "indexdef ::= OPENB expr CLOSEB",
 /* 130 */ "indexdef ::= OPENB CLOSEB",
 /* 131 */ "varvar ::= varvarele",
 /* 132 */ "varvar ::= varvar varvarele",
 /* 133 */ "varvarele ::= ID",
 /* 134 */ "varvarele ::= LDEL expr RDEL",
 /* 135 */ "object ::= varindexed objectchain",
 /* 136 */ "objectchain ::= objectelement",
 /* 137 */ "objectchain ::= objectchain objectelement",
 /* 138 */ "objectelement ::= PTR ID arrayindex",
 /* 139 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 140 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 141 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 142 */ "objectelement ::= PTR method",
 /* 143 */ "function ::= ID OPENP params CLOSEP",
 /* 144 */ "method ::= ID OPENP params CLOSEP",
 /* 145 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 146 */ "params ::= params COMMA expr",
 /* 147 */ "params ::= expr",
 /* 148 */ "params ::=",
 /* 149 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 150 */ "modifierlist ::= modifier modparameters",
 /* 151 */ "modifier ::= VERT AT ID",
 /* 152 */ "modifier ::= VERT ID",
 /* 153 */ "modparameters ::= modparameters modparameter",
 /* 154 */ "modparameters ::=",
 /* 155 */ "modparameter ::= COLON value",
 /* 156 */ "modparameter ::= COLON array",
 /* 157 */ "static_class_access ::= method",
 /* 158 */ "static_class_access ::= method objectchain",
 /* 159 */ "static_class_access ::= ID",
 /* 160 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 161 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 162 */ "ifcond ::= EQUALS",
 /* 163 */ "ifcond ::= NOTEQUALS",
 /* 164 */ "ifcond ::= GREATERTHAN",
 /* 165 */ "ifcond ::= LESSTHAN",
 /* 166 */ "ifcond ::= GREATEREQUAL",
 /* 167 */ "ifcond ::= LESSEQUAL",
 /* 168 */ "ifcond ::= IDENTITY",
 /* 169 */ "ifcond ::= NONEIDENTITY",
 /* 170 */ "ifcond ::= MOD",
 /* 171 */ "lop ::= LAND",
 /* 172 */ "lop ::= LOR",
 /* 173 */ "lop ::= LXOR",
 /* 174 */ "array ::= OPENB arrayelements CLOSEB",
 /* 175 */ "arrayelements ::= arrayelement",
 /* 176 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 177 */ "arrayelements ::=",
 /* 178 */ "arrayelement ::= value APTR expr",
 /* 179 */ "arrayelement ::= ID APTR expr",
 /* 180 */ "arrayelement ::= expr",
 /* 181 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 182 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 183 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 184 */ "doublequoted ::= doublequotedcontent",
 /* 185 */ "doublequotedcontent ::= DOLLARID",
 /* 186 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 187 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 188 */ "doublequotedcontent ::= smartytag RDEL",
 /* 189 */ "doublequotedcontent ::= TEXT",
 /* 190 */ "optspace ::= SPACE",
 /* 191 */ "optspace ::=",
    );

    public function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    public static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    public function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if ($this->yyTraceFILE && $this->yyidx >= 0) {
            fwrite($this->yyTraceFILE,
                $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;

        return $yymajor;
    }

    public function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource($this->yyTraceFILE)) {
            fclose($this->yyTraceFILE);
        }
    }

    public function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;

                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
    $this->yyidx = $yyidx;
    $this->yystack = $stack;

        return array_unique($expected);
    }

    public function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;

                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;

        return true;
    }

   public function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if ($this->yyTraceFILE) {
                    fwrite($this->yyTraceFILE, $this->yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }

                return $this->yy_find_shift_action($iFallback);
            }

            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    public function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if ($this->yyTraceFILE) {
                fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 70 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1682 "smarty_internal_templateparser.php"

            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if ($this->yyTraceFILE && $this->yyidx > 0) {
            fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt,
                $yyNewState);
            fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf($this->yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite($this->yyTraceFILE,"\n");
        }
    }

    public static $yyRuleInfo = array(
  array( 'lhs' => 76, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 1 ),
  array( 'lhs' => 77, 'rhs' => 2 ),
  array( 'lhs' => 77, 'rhs' => 0 ),
  array( 'lhs' => 78, 'rhs' => 2 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 78, 'rhs' => 1 ),
  array( 'lhs' => 80, 'rhs' => 2 ),
  array( 'lhs' => 80, 'rhs' => 3 ),
  array( 'lhs' => 81, 'rhs' => 2 ),
  array( 'lhs' => 81, 'rhs' => 0 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 82, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 6 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 11 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 92, 'rhs' => 1 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 10 ),
  array( 'lhs' => 79, 'rhs' => 7 ),
  array( 'lhs' => 79, 'rhs' => 10 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 2 ),
  array( 'lhs' => 79, 'rhs' => 3 ),
  array( 'lhs' => 79, 'rhs' => 4 ),
  array( 'lhs' => 79, 'rhs' => 5 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 0 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 89, 'rhs' => 1 ),
  array( 'lhs' => 89, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 4 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 4 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 2 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 95, 'rhs' => 8 ),
  array( 'lhs' => 95, 'rhs' => 7 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 1 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 3 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 83, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 99, 'rhs' => 3 ),
  array( 'lhs' => 99, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 104, 'rhs' => 2 ),
  array( 'lhs' => 104, 'rhs' => 0 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 5 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 105, 'rhs' => 4 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 5 ),
  array( 'lhs' => 105, 'rhs' => 3 ),
  array( 'lhs' => 105, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 103, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 1 ),
  array( 'lhs' => 107, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 108, 'rhs' => 4 ),
  array( 'lhs' => 108, 'rhs' => 5 ),
  array( 'lhs' => 108, 'rhs' => 6 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 4 ),
  array( 'lhs' => 109, 'rhs' => 4 ),
  array( 'lhs' => 109, 'rhs' => 5 ),
  array( 'lhs' => 110, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 1 ),
  array( 'lhs' => 110, 'rhs' => 0 ),
  array( 'lhs' => 84, 'rhs' => 3 ),
  array( 'lhs' => 84, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 0 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 2 ),
  array( 'lhs' => 102, 'rhs' => 1 ),
  array( 'lhs' => 102, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 96, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 113, 'rhs' => 0 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 3 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 2 ),
  array( 'lhs' => 115, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 3 ),
  array( 'lhs' => 116, 'rhs' => 2 ),
  array( 'lhs' => 116, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 0 ),
    );

    public static $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        14 => 11,
        191 => 11,
        12 => 12,
        66 => 12,
        13 => 13,
        94 => 13,
        96 => 13,
        97 => 13,
        120 => 13,
        158 => 13,
        15 => 15,
        16 => 15,
        37 => 15,
        59 => 15,
        60 => 15,
        67 => 15,
        68 => 15,
        73 => 15,
        93 => 15,
        98 => 15,
        99 => 15,
        104 => 15,
        106 => 15,
        107 => 15,
        114 => 15,
        131 => 15,
        157 => 15,
        159 => 15,
        175 => 15,
        180 => 15,
        190 => 15,
        17 => 17,
        18 => 18,
        19 => 19,
        21 => 19,
        20 => 20,
        22 => 22,
        23 => 22,
        24 => 24,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 28,
        29 => 29,
        30 => 30,
        31 => 31,
        33 => 31,
        32 => 32,
        34 => 32,
        35 => 35,
        36 => 36,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        43 => 41,
        42 => 42,
        44 => 42,
        45 => 45,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        62 => 53,
        147 => 53,
        151 => 53,
        155 => 53,
        156 => 53,
        54 => 54,
        148 => 54,
        154 => 54,
        55 => 55,
        56 => 56,
        57 => 56,
        58 => 58,
        61 => 61,
        63 => 63,
        64 => 64,
        65 => 64,
        69 => 69,
        70 => 70,
        71 => 70,
        72 => 70,
        74 => 74,
        111 => 74,
        75 => 75,
        78 => 75,
        89 => 75,
        76 => 76,
        77 => 77,
        79 => 79,
        80 => 80,
        81 => 81,
        86 => 81,
        82 => 82,
        85 => 82,
        83 => 83,
        88 => 83,
        84 => 84,
        87 => 84,
        90 => 90,
        91 => 91,
        92 => 92,
        95 => 95,
        100 => 100,
        101 => 101,
        102 => 102,
        103 => 103,
        105 => 105,
        108 => 108,
        109 => 109,
        110 => 110,
        112 => 112,
        113 => 113,
        115 => 115,
        116 => 116,
        117 => 117,
        118 => 118,
        119 => 119,
        121 => 121,
        177 => 121,
        122 => 122,
        123 => 123,
        124 => 124,
        125 => 125,
        126 => 126,
        129 => 126,
        127 => 127,
        128 => 128,
        130 => 130,
        132 => 132,
        133 => 133,
        134 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        140 => 140,
        141 => 141,
        142 => 142,
        143 => 143,
        144 => 144,
        145 => 145,
        146 => 146,
        149 => 149,
        150 => 150,
        152 => 152,
        153 => 153,
        160 => 160,
        161 => 161,
        162 => 162,
        163 => 163,
        164 => 164,
        165 => 165,
        166 => 166,
        167 => 167,
        168 => 168,
        169 => 169,
        170 => 170,
        171 => 171,
        172 => 172,
        173 => 173,
        174 => 174,
        176 => 176,
        178 => 178,
        179 => 179,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        187 => 187,
        188 => 188,
        189 => 189,
    );
#line 81 "smarty_internal_templateparser.y"
    function yy_r0(){
    $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
#line 2095 "smarty_internal_templateparser.php"
#line 89 "smarty_internal_templateparser.y"
    function yy_r1(){
    if ($this->yystack[$this->yyidx + 0]->minor != null) {
        $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2102 "smarty_internal_templateparser.php"
#line 109 "smarty_internal_templateparser.y"
    function yy_r4(){
    if ($this->compiler->has_code) {
        $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + -1]->minor,true));
    } else {
        $this->_retvalue = null;
    }
    $this->compiler->has_variable_string = false;
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 2114 "smarty_internal_templateparser.php"
#line 121 "smarty_internal_templateparser.y"
    function yy_r5(){
    $this->_retvalue = null;
    }
#line 2119 "smarty_internal_templateparser.php"
#line 126 "smarty_internal_templateparser.y"
    function yy_r6(){
    $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2124 "smarty_internal_templateparser.php"
#line 131 "smarty_internal_templateparser.y"
    function yy_r7(){
        if ($this->strip) {
            $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
        }
    }
#line 2133 "smarty_internal_templateparser.php"
#line 140 "smarty_internal_templateparser.y"
    function yy_r8(){
    $this->strip = true;
    }
#line 2138 "smarty_internal_templateparser.php"
#line 144 "smarty_internal_templateparser.y"
    function yy_r9(){
    $this->strip = false;
    }
#line 2143 "smarty_internal_templateparser.php"
#line 148 "smarty_internal_templateparser.y"
    function yy_r10(){
        if ($this->strip) {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
        } else {
            SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, $this->yystack[$this->yyidx + 0]->minor);
        }
    }
#line 2152 "smarty_internal_templateparser.php"
#line 157 "smarty_internal_templateparser.y"
    function yy_r11(){
    $this->_retvalue = '';
    }
#line 2157 "smarty_internal_templateparser.php"
#line 161 "smarty_internal_templateparser.y"
    function yy_r12(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2162 "smarty_internal_templateparser.php"
#line 165 "smarty_internal_templateparser.y"
    function yy_r13(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2167 "smarty_internal_templateparser.php"
#line 173 "smarty_internal_templateparser.y"
    function yy_r15(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2172 "smarty_internal_templateparser.php"
#line 187 "smarty_internal_templateparser.y"
    function yy_r17(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2177 "smarty_internal_templateparser.php"
#line 191 "smarty_internal_templateparser.y"
    function yy_r18(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2182 "smarty_internal_templateparser.php"
#line 195 "smarty_internal_templateparser.y"
    function yy_r19(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2187 "smarty_internal_templateparser.php"
#line 199 "smarty_internal_templateparser.y"
    function yy_r20(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2192 "smarty_internal_templateparser.php"
#line 212 "smarty_internal_templateparser.y"
    function yy_r22(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + 0]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -2]->minor."'")));
    }
#line 2197 "smarty_internal_templateparser.php"
#line 220 "smarty_internal_templateparser.y"
    function yy_r24(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")),$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2202 "smarty_internal_templateparser.php"
#line 224 "smarty_internal_templateparser.y"
    function yy_r25(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -3]->minor['smarty_internal_index']));
    }
#line 2207 "smarty_internal_templateparser.php"
#line 229 "smarty_internal_templateparser.y"
    function yy_r26(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2212 "smarty_internal_templateparser.php"
#line 233 "smarty_internal_templateparser.y"
    function yy_r27(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor,array());
    }
#line 2217 "smarty_internal_templateparser.php"
#line 238 "smarty_internal_templateparser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2222 "smarty_internal_templateparser.php"
#line 243 "smarty_internal_templateparser.y"
    function yy_r29(){
    $this->_retvalue = "ob_start();\n".$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).'echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')) . ";\n";
    }
#line 2228 "smarty_internal_templateparser.php"
#line 249 "smarty_internal_templateparser.y"
    function yy_r30(){
    $this->_retvalue = "ob_start();\n".$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor)).'echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')) . ";\n";
    }
#line 2234 "smarty_internal_templateparser.php"
#line 255 "smarty_internal_templateparser.y"
    function yy_r31(){
    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2240 "smarty_internal_templateparser.php"
#line 260 "smarty_internal_templateparser.y"
    function yy_r32(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2246 "smarty_internal_templateparser.php"
#line 276 "smarty_internal_templateparser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -9]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -6]->minor),array('var'=>$this->yystack[$this->yyidx + -2]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),1);
    }
#line 2251 "smarty_internal_templateparser.php"
#line 280 "smarty_internal_templateparser.y"
    function yy_r36(){
    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2256 "smarty_internal_templateparser.php"
#line 288 "smarty_internal_templateparser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2261 "smarty_internal_templateparser.php"
#line 292 "smarty_internal_templateparser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);
    }
#line 2266 "smarty_internal_templateparser.php"
#line 297 "smarty_internal_templateparser.y"
    function yy_r40(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2271 "smarty_internal_templateparser.php"
#line 302 "smarty_internal_templateparser.y"
    function yy_r41(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -4]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2276 "smarty_internal_templateparser.php"
#line 306 "smarty_internal_templateparser.y"
    function yy_r42(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -7]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -4]->minor))));
    }
#line 2281 "smarty_internal_templateparser.php"
#line 319 "smarty_internal_templateparser.y"
    function yy_r45(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));
    }
#line 2286 "smarty_internal_templateparser.php"
#line 323 "smarty_internal_templateparser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor)),$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2291 "smarty_internal_templateparser.php"
#line 328 "smarty_internal_templateparser.y"
    function yy_r47(){
    $j = strrpos($this->yystack[$this->yyidx + 0]->minor,'.');
    if ($this->yystack[$this->yyidx + 0]->minor[$j+1] == 'c') {
        // {$smarty.block.child}
        $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
    } else {
        // {$smarty.block.parent}
        $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler);
    }
    }
#line 2303 "smarty_internal_templateparser.php"
#line 341 "smarty_internal_templateparser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());
    }
#line 2308 "smarty_internal_templateparser.php"
#line 345 "smarty_internal_templateparser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2313 "smarty_internal_templateparser.php"
#line 350 "smarty_internal_templateparser.y"
    function yy_r50(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2318 "smarty_internal_templateparser.php"
#line 354 "smarty_internal_templateparser.y"
    function yy_r51(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2323 "smarty_internal_templateparser.php"
#line 362 "smarty_internal_templateparser.y"
    function yy_r52(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2329 "smarty_internal_templateparser.php"
#line 368 "smarty_internal_templateparser.y"
    function yy_r53(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2334 "smarty_internal_templateparser.php"
#line 373 "smarty_internal_templateparser.y"
    function yy_r54(){
    $this->_retvalue = array();
    }
#line 2339 "smarty_internal_templateparser.php"
#line 378 "smarty_internal_templateparser.y"
    function yy_r55(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2352 "smarty_internal_templateparser.php"
#line 390 "smarty_internal_templateparser.y"
    function yy_r56(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2357 "smarty_internal_templateparser.php"
#line 398 "smarty_internal_templateparser.y"
    function yy_r58(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2362 "smarty_internal_templateparser.php"
#line 410 "smarty_internal_templateparser.y"
    function yy_r61(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2367 "smarty_internal_templateparser.php"
#line 423 "smarty_internal_templateparser.y"
    function yy_r63(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2373 "smarty_internal_templateparser.php"
#line 428 "smarty_internal_templateparser.y"
    function yy_r64(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2378 "smarty_internal_templateparser.php"
#line 456 "smarty_internal_templateparser.y"
    function yy_r69(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2383 "smarty_internal_templateparser.php"
#line 461 "smarty_internal_templateparser.y"
    function yy_r70(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2388 "smarty_internal_templateparser.php"
#line 480 "smarty_internal_templateparser.y"
    function yy_r74(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2393 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r75(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2398 "smarty_internal_templateparser.php"
#line 490 "smarty_internal_templateparser.y"
    function yy_r76(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2403 "smarty_internal_templateparser.php"
#line 494 "smarty_internal_templateparser.y"
    function yy_r77(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2408 "smarty_internal_templateparser.php"
#line 502 "smarty_internal_templateparser.y"
    function yy_r79(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2413 "smarty_internal_templateparser.php"
#line 506 "smarty_internal_templateparser.y"
    function yy_r80(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2418 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r81(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2423 "smarty_internal_templateparser.php"
#line 514 "smarty_internal_templateparser.y"
    function yy_r82(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2428 "smarty_internal_templateparser.php"
#line 518 "smarty_internal_templateparser.y"
    function yy_r83(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2433 "smarty_internal_templateparser.php"
#line 522 "smarty_internal_templateparser.y"
    function yy_r84(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2438 "smarty_internal_templateparser.php"
#line 546 "smarty_internal_templateparser.y"
    function yy_r90(){
    self::$prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.self::$prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.";\n";
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.self::$prefix_number;
    }
#line 2445 "smarty_internal_templateparser.php"
#line 555 "smarty_internal_templateparser.y"
    function yy_r91(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2450 "smarty_internal_templateparser.php"
#line 559 "smarty_internal_templateparser.y"
    function yy_r92(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2455 "smarty_internal_templateparser.php"
#line 574 "smarty_internal_templateparser.y"
    function yy_r95(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2460 "smarty_internal_templateparser.php"
#line 595 "smarty_internal_templateparser.y"
    function yy_r100(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2465 "smarty_internal_templateparser.php"
#line 599 "smarty_internal_templateparser.y"
    function yy_r101(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
#line 2470 "smarty_internal_templateparser.php"
#line 603 "smarty_internal_templateparser.y"
    function yy_r102(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2475 "smarty_internal_templateparser.php"
#line 608 "smarty_internal_templateparser.y"
    function yy_r103(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2488 "smarty_internal_templateparser.php"
#line 626 "smarty_internal_templateparser.y"
    function yy_r105(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2493 "smarty_internal_templateparser.php"
#line 641 "smarty_internal_templateparser.y"
    function yy_r108(){
    if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
        }
    } else {
        $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2506 "smarty_internal_templateparser.php"
#line 653 "smarty_internal_templateparser.y"
    function yy_r109(){
    if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2515 "smarty_internal_templateparser.php"
#line 662 "smarty_internal_templateparser.y"
    function yy_r110(){
    self::$prefix_number++;
    $this->compiler->prefix_code[] = 'ob_start();'.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.self::$prefix_number.'=ob_get_clean();';
    $this->_retvalue = '$_tmp'.self::$prefix_number;
    }
#line 2522 "smarty_internal_templateparser.php"
#line 677 "smarty_internal_templateparser.y"
    function yy_r112(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2535 "smarty_internal_templateparser.php"
#line 690 "smarty_internal_templateparser.y"
    function yy_r113(){
    $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2540 "smarty_internal_templateparser.php"
#line 700 "smarty_internal_templateparser.y"
    function yy_r115(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')';
    }
#line 2545 "smarty_internal_templateparser.php"
#line 704 "smarty_internal_templateparser.y"
    function yy_r116(){
    $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'\')) ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' :null)';
    }
#line 2550 "smarty_internal_templateparser.php"
#line 708 "smarty_internal_templateparser.y"
    function yy_r117(){
    $this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')';
    }
#line 2555 "smarty_internal_templateparser.php"
#line 712 "smarty_internal_templateparser.y"
    function yy_r118(){
    $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -2]->minor .')) ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' : null)';
    }
#line 2560 "smarty_internal_templateparser.php"
#line 716 "smarty_internal_templateparser.y"
    function yy_r119(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2565 "smarty_internal_templateparser.php"
#line 729 "smarty_internal_templateparser.y"
    function yy_r121(){
    return;
    }
#line 2570 "smarty_internal_templateparser.php"
#line 735 "smarty_internal_templateparser.y"
    function yy_r122(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2575 "smarty_internal_templateparser.php"
#line 739 "smarty_internal_templateparser.y"
    function yy_r123(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2580 "smarty_internal_templateparser.php"
#line 743 "smarty_internal_templateparser.y"
    function yy_r124(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2585 "smarty_internal_templateparser.php"
#line 747 "smarty_internal_templateparser.y"
    function yy_r125(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2590 "smarty_internal_templateparser.php"
#line 751 "smarty_internal_templateparser.y"
    function yy_r126(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2595 "smarty_internal_templateparser.php"
#line 756 "smarty_internal_templateparser.y"
    function yy_r127(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2600 "smarty_internal_templateparser.php"
#line 760 "smarty_internal_templateparser.y"
    function yy_r128(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2605 "smarty_internal_templateparser.php"
#line 770 "smarty_internal_templateparser.y"
    function yy_r130(){
    $this->_retvalue = '[]';
    }
#line 2610 "smarty_internal_templateparser.php"
#line 783 "smarty_internal_templateparser.y"
    function yy_r132(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2615 "smarty_internal_templateparser.php"
#line 788 "smarty_internal_templateparser.y"
    function yy_r133(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2620 "smarty_internal_templateparser.php"
#line 793 "smarty_internal_templateparser.y"
    function yy_r134(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2625 "smarty_internal_templateparser.php"
#line 800 "smarty_internal_templateparser.y"
    function yy_r135(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2634 "smarty_internal_templateparser.php"
#line 809 "smarty_internal_templateparser.y"
    function yy_r136(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2639 "smarty_internal_templateparser.php"
#line 814 "smarty_internal_templateparser.y"
    function yy_r137(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2644 "smarty_internal_templateparser.php"
#line 819 "smarty_internal_templateparser.y"
    function yy_r138(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2652 "smarty_internal_templateparser.php"
#line 826 "smarty_internal_templateparser.y"
    function yy_r139(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2660 "smarty_internal_templateparser.php"
#line 833 "smarty_internal_templateparser.y"
    function yy_r140(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2668 "smarty_internal_templateparser.php"
#line 840 "smarty_internal_templateparser.y"
    function yy_r141(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 2676 "smarty_internal_templateparser.php"
#line 848 "smarty_internal_templateparser.y"
    function yy_r142(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2681 "smarty_internal_templateparser.php"
#line 856 "smarty_internal_templateparser.y"
    function yy_r143(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                if (strncasecmp($par,'$_smarty_tpl->getConfigVariable',strlen('$_smarty_tpl->getConfigVariable')) === 0) {
                    self::$prefix_number++;
                    $this->compiler->prefix_code[] = '$_tmp'.self::$prefix_number.'='.str_replace(')',', false)',$par).";\n";
                    $isset_par = '$_tmp'.self::$prefix_number;
                } else {
                    $isset_par=str_replace("')->value","',null,true,false)->value",$par);
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"');
                }
                if ($func_name == 'empty') {
                    $this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$this->yystack[$this->yyidx + -1]->minor[0]).')';
                } else {
                    $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
                }
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 2717 "smarty_internal_templateparser.php"
#line 894 "smarty_internal_templateparser.y"
    function yy_r144(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 2725 "smarty_internal_templateparser.php"
#line 901 "smarty_internal_templateparser.y"
    function yy_r145(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    self::$prefix_number++;
    $this->compiler->prefix_code[] = '$_tmp'.self::$prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';';
    $this->_retvalue = '$_tmp'.self::$prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 2735 "smarty_internal_templateparser.php"
#line 912 "smarty_internal_templateparser.y"
    function yy_r146(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 2740 "smarty_internal_templateparser.php"
#line 929 "smarty_internal_templateparser.y"
    function yy_r149(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 2745 "smarty_internal_templateparser.php"
#line 933 "smarty_internal_templateparser.y"
    function yy_r150(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2750 "smarty_internal_templateparser.php"
#line 941 "smarty_internal_templateparser.y"
    function yy_r152(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2755 "smarty_internal_templateparser.php"
#line 949 "smarty_internal_templateparser.y"
    function yy_r153(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2760 "smarty_internal_templateparser.php"
#line 983 "smarty_internal_templateparser.y"
    function yy_r160(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2765 "smarty_internal_templateparser.php"
#line 988 "smarty_internal_templateparser.y"
    function yy_r161(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2770 "smarty_internal_templateparser.php"
#line 994 "smarty_internal_templateparser.y"
    function yy_r162(){
    $this->_retvalue = '==';
    }
#line 2775 "smarty_internal_templateparser.php"
#line 998 "smarty_internal_templateparser.y"
    function yy_r163(){
    $this->_retvalue = '!=';
    }
#line 2780 "smarty_internal_templateparser.php"
#line 1002 "smarty_internal_templateparser.y"
    function yy_r164(){
    $this->_retvalue = '>';
    }
#line 2785 "smarty_internal_templateparser.php"
#line 1006 "smarty_internal_templateparser.y"
    function yy_r165(){
    $this->_retvalue = '<';
    }
#line 2790 "smarty_internal_templateparser.php"
#line 1010 "smarty_internal_templateparser.y"
    function yy_r166(){
    $this->_retvalue = '>=';
    }
#line 2795 "smarty_internal_templateparser.php"
#line 1014 "smarty_internal_templateparser.y"
    function yy_r167(){
    $this->_retvalue = '<=';
    }
#line 2800 "smarty_internal_templateparser.php"
#line 1018 "smarty_internal_templateparser.y"
    function yy_r168(){
    $this->_retvalue = '===';
    }
#line 2805 "smarty_internal_templateparser.php"
#line 1022 "smarty_internal_templateparser.y"
    function yy_r169(){
    $this->_retvalue = '!==';
    }
#line 2810 "smarty_internal_templateparser.php"
#line 1026 "smarty_internal_templateparser.y"
    function yy_r170(){
    $this->_retvalue = '%';
    }
#line 2815 "smarty_internal_templateparser.php"
#line 1030 "smarty_internal_templateparser.y"
    function yy_r171(){
    $this->_retvalue = '&&';
    }
#line 2820 "smarty_internal_templateparser.php"
#line 1034 "smarty_internal_templateparser.y"
    function yy_r172(){
    $this->_retvalue = '||';
    }
#line 2825 "smarty_internal_templateparser.php"
#line 1038 "smarty_internal_templateparser.y"
    function yy_r173(){
    $this->_retvalue = ' XOR ';
    }
#line 2830 "smarty_internal_templateparser.php"
#line 1045 "smarty_internal_templateparser.y"
    function yy_r174(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2835 "smarty_internal_templateparser.php"
#line 1053 "smarty_internal_templateparser.y"
    function yy_r176(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2840 "smarty_internal_templateparser.php"
#line 1061 "smarty_internal_templateparser.y"
    function yy_r178(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2845 "smarty_internal_templateparser.php"
#line 1065 "smarty_internal_templateparser.y"
    function yy_r179(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2850 "smarty_internal_templateparser.php"
#line 1077 "smarty_internal_templateparser.y"
    function yy_r181(){
    $this->_retvalue = "''";
    }
#line 2855 "smarty_internal_templateparser.php"
#line 1081 "smarty_internal_templateparser.y"
    function yy_r182(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();
    }
#line 2860 "smarty_internal_templateparser.php"
#line 1086 "smarty_internal_templateparser.y"
    function yy_r183(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2866 "smarty_internal_templateparser.php"
#line 1091 "smarty_internal_templateparser.y"
    function yy_r184(){
    $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2871 "smarty_internal_templateparser.php"
#line 1095 "smarty_internal_templateparser.y"
    function yy_r185(){
    $this->_retvalue = new _smarty_code($this, '(string)smarty_array_lookup($_smarty_tpl->tpl_vars, \''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\')->value');
    }
#line 2876 "smarty_internal_templateparser.php"
#line 1099 "smarty_internal_templateparser.y"
    function yy_r186(){
    $this->_retvalue = new _smarty_code($this, '(string)'.$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2881 "smarty_internal_templateparser.php"
#line 1103 "smarty_internal_templateparser.y"
    function yy_r187(){
    $this->_retvalue = new _smarty_code($this, '(string)('.$this->yystack[$this->yyidx + -1]->minor.')');
    }
#line 2886 "smarty_internal_templateparser.php"
#line 1107 "smarty_internal_templateparser.y"
    function yy_r188(){
    $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + -1]->minor);
    }
#line 2891 "smarty_internal_templateparser.php"
#line 1111 "smarty_internal_templateparser.y"
    function yy_r189(){
    $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2896 "smarty_internal_templateparser.php"

    private $_retvalue;

    public function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if ($this->yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n",
                $this->yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!$this->yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    public function yy_parse_failed()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    public function yy_syntax_error($yymajor, $TOKEN)
    {
#line 63 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 2958 "smarty_internal_templateparser.php"
    }

    public function yy_accept()
    {
        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
        } while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 55 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 2975 "smarty_internal_templateparser.php"
    }

    public function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if ($this->yyTraceFILE) {
            fprintf($this->yyTraceFILE, "%sInput %s\n",
                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if ($this->yyTraceFILE) {
                    fprintf($this->yyTraceFILE, "%sSyntax Error!\n",
                        $this->yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
                        if ($this->yyTraceFILE) {
                            fprintf($this->yyTraceFILE, "%sDiscard input token %s\n",
                                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
?>

